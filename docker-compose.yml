version: '2'
services:

  postgres:
    container_name: haitidata-postgres
    image: postgres
    volumes:
      - ./deployment/pg/postgres_data:/var/lib/postgresql

  elasticsearch:
    container_name: haitidata-elasticsearch
    image: elasticsearch

  rabbitmq:
    container_name: haitidata-rabbitmq
    image: rabbitmq

  django:
    container_name: haitidata-django
    build: ./Dockerfile
    links:
      - postgres
      - elasticsearch
      - rabbitmq
      - geoserver
    volumes:
      - ./django_project:/home/web/django_project
      - ./deployment/logs:/var/log/
    env_file:
      - ./deployment/env/production/django.env

  celery:
    container_name: haitidata-celery
    image: geonode/django
    links:
      - rabbitmq
      - postgres
      - elasticsearch
    command: celery worker --app=geonode.celery_app:app -B -l INFO
    env_file:
      - ./deployment/env/production/django.env

  geoserver:
    container_name: haitidata-geoserver
    build: deployment/docker-geoserver
    links:
      - postgres
    ports:
      - "8080:8080"
    volumes_from:
      - data_dir_conf
    env_file:
      - ./deployment/env/production/geoserver.env

  geonode:
    container_name: haitidata-geonode
    image: geonode/nginx:geoserver
    links:
      - django
    ports:
      - "80:80"

  data_dir_conf:
    container_name: haitidata-data
    image: geonode/geoserver_data:2.10.x
    container_name: geoserver_data_dir
    command: /bin/true
    volumes:
      - /geoserver_data/data

volumes:

  geoserver_data_dir:
